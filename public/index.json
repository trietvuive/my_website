[{"categories":["programming"],"content":"I created a way to wave using Ethereum wallet! This is mostly thanks to buildspace and Farza, a great blockchain instructor that taught the Solidity course. I was just followed along =) They have a Twitch stream every few days or so. Basically lecture. Feel free to explore if you want. I’ll probably add a log and some other forms to wave soon, for people who just wanna leave a message or so. But this is a pretty cool project ig. ","date":"2021-08-14","objectID":"/posts/wave/:0:0","tags":null,"title":"Wave added!","uri":"/posts/wave/"},{"categories":["Guitar"],"content":"I arranged my first ever guitar song! It’s for this song. From an anime ofc. Very good anime at that; don’t be fooled by the title, it’s not about that. I’ll upload both the Guitar Pro and PDF in due time to the Google Drive folder. Frankly, I’m too lazy to do it rn so… But I’ll leave it free as a contribution to the guitar community that I constantly pulled tabs from. I’ll probably consider doing a guitar cover too. Heck, I might become the next big guitar youtuber. Who knows? Also, it isn’t as cool as it sounds. I just pull from some MIDI I found online and try to merge tracks together using Guitar Pro. Still. I have been kinda afraid to go on the guitar/music theory route and create my own arrangement ever since I started guitar 7-8 years ago. This is a huge step for me personally. If you need the tab urgently for some reason, feel free to shoot me a DM/email and I’ll send it over. But I figured nobody read these, so I’ll just update my guitar repo along with this arrangement whenever I feel like it. ","date":"2021-08-02","objectID":"/posts/first-guitar-arrangement/:0:0","tags":["guitar","tab"],"title":"First Guitar Arrangement!","uri":"/posts/first-guitar-arrangement/"},{"categories":["Guitar"],"content":"Any anime guitar repo would be incomplete without K-On, literally the greatest guitar anime there ever was. Therefore, the Drive folder now includes K-On. Also, my guitar repos are all tabs available online, and they are made available by very good and generous people (who are much more talented than me) that made these tabs and distribute it for free (some example: vvxo, Aethersan , Tam Lu, okayan_zeak21, and Very Nize). Obviously, there are many more people, but that’s the main one that I downloaded from. Also, again, this isn’t the usual “please go support your creator”; rather, this is more of “please show them support before they stop doing what they’re doing now”. In the guitar world, there’s no incentive for you to distribute your sheet/tab freely for everyone; in fact, most creators usually paywall all of their arrangements (There’s literally a separate industry for sheet music that worths ~$1 billion). The creators that make tab available for free enjoy no more support than those who don’t; most of the people I just named actually have less subscribers and views than people who keep it behind paywall, even though the former are just as talented as the latter. Open source is a very hard and costly decision that doesn’t have much upside, and we should actively support those who keep it open-source, rather than taking it for granted. ","date":"2021-07-13","objectID":"/posts/guitar_update_2/:0:0","tags":["guitar","k-on"],"title":"Guitar Update 2","uri":"/posts/guitar_update_2/"},{"categories":["shitpost"],"content":"It’s the NBA finals, and this reminds me that it’s time for shitpost. I haven’t shitpost enough about anime, so time to talk about sports. I’m not qualified to talk about professional sports like your usual ESPN analysts (not that they’re even qualified to begin with), so I won’t. However, I did play a couple of sports: Tennis tournament when I was young, swimming, soccer (cuz I’m Asian), and basketball in high school (I still cross people up). Let’s start with a chart that tells the story better than I can. The chart should tells you what you need to know: The popularity of sports league has exploded since 2000. In context, they 5x their earning over 20 years, while SP 500 only 3x or so during the last 10 years (during the greatest bull run in history, and not counting 2008 or 2020). If you don’t cherry pick 2008, then you’ll barely end up with 2x over 20 years. Additionally, sport podcast exploded in popularity. My basketball coach now also has a sport podcast. Some random white dudes you met on the street probably host a sport podcast with their friends. Literally everyone is talking about sport, and as a guy, if you don’t know sports, then…are you even? Not that I have a particular grudge against sports or view everyone who play sports as dumb meathead. However, I must admit that I have no idea why sport is this popular, or why it’s a must to know to effectively hold a conversation across America. Let’s look into some of the reasons why sport is interesting (imo, feel free to add it): _Motivation: Kids look up to great athlete or underdog who overcame their struggles. There are a lot of feel-good story in sports, if you dig deep enough. My favorite is Bryn Forbes on the Bucks(for the nerds, the Bucks an NBA team that’s playing in the Finals), who was undrafted before becoming a key piece in a Finals squad. Or Messi. And ofc Jeremy Lin. Still pissed that Melos and the Knicks did him dirty. _Conversation topic: Because sport is popular, you can essentially talk sports with anyone from any background. You can’t really talk stocks with an engineers, or music with a gym rat,… This ultimately becomes a positive feedback loop where sports become a dominant conversation topic, therefore everyone has to know sports to maintain a conversation, thus making it an even bigger conversation topic. That’s all I can really think of right now, but I’m sure there are more reasons. However, what intrigues me was that sport’s popularity comes more from people talking about sports than playing sports. From CDC. Sure, it has gone up, but nowhere near the explosion of popularity of major leagues. There are 5x more people watching sports over 20 years, but barely a 10-20% rise in physical activity over 10 years. Idk what to really think of it. Sure, sports as a physical exercise is fun, healthy, and helps you maintain an active lifestyle. By all means, go to your local gym or sports court. However, what good is it to talk about sports? Do you really need to know where athletes are living, what they’re doing,… on a daily basis? (Because that’s what ESPN covered when they run out of topic). Should professional sports and professional athletes be that big of a conversation topic at all? Sure, watch the game and admire how they play, their zone, their hustle,… or cheer for your home team, but these online “analysts” and the people who run sport podcasts only talked about how many points each player put up, their FG%, how they play,… Isn’t that literally just gossip and tabloid? The heroic, inspirational, underdog story of sports are mostly taken completely off the table, and what’s left in the sport podcasts are just discussion about private life of athletes and their teams. I’ll admit, I don’t know much about the sport podcasting world. But it’s quite bizarre to me how many people tune in to these podcasts to listen to someone talking about someone playing sports. There are so many layers removed from the enjoyment and playing of sport itself. After ","date":"2021-07-08","objectID":"/posts/sport/:0:0","tags":["sport"],"title":"The Obsession with Sports","uri":"/posts/sport/"},{"categories":["Programming"],"content":"There are a lot of big brain solutions on Codeforces. Or maybe I’m just too small-brained or haven’t learned these things yet. This was the problem I found today. As usual, I have no idea how to do this shit (within the time limit). I thought about DP, but then I saw the n \u003c= 10^9. Any dp solution will probably requires at least N^2 - you’ll have to loop from 1 to 10^9, and then you have to find divisors of all number. There’s no way it works within 2 seconds. So I looked up the solution. One of the solution look like this (courtesy of Nxz) #include \u003ciostream\u003e using namespace std; int main() { int t, n; cin \u003e\u003e t; while (t--) { cin \u003e\u003e n; cout \u003c\u003c ((n % 2 or (n == (n \u0026 -n)) \u0026\u0026 n % 3 == 2) ? \"Bob\\n\" : \"Alice\\n\"); } } After thinking a bit, I think it works like this: n == (n\u0026-n) tests if n is a power of 2. You can try it yourself, but basically only binary representation that looks like 1000… will return true (2’s complement of a power of 2 equals itself, basically). n%3 == 2 tests if n is == 2 to the power of an odd number. 2^6 % 3 == 1, and 2^7 % 3 == 2. Then, what this code basically saying is Bob wins if N is an odd number, or if N == 2^an odd number. Let’s see why this is the case. First, you don’t want N to be an odd number if it’s your turn (because all primes are odd). When N is an odd number, there are 2 cases: It’s a prime. You’re dead, because you can’t pick any divisor. You lost. It has an odd divisor. Note that no odd number has an even divisor. You pick the odd divisor, and your opponent get an even N (odd - odd == even) The N that your opponent gets will have an odd divisor. Why? Because you subtract a divisor of N from N, so N can still be divided by that same divisor (if it’s not, then the N you get was a prime, so you already lost). Note that you cannot subtract N from N. Therefore, this creates a cycle where you keep getting an odd number, forced to turn it into an even number, and your opponent then gives you back an odd number. Therefore, whoever gets the odd number lose, and since both players play optimally, they will avoid odd number at all cost. Therefore, if n is odd and you’re first to act, you already lost. However, that doesn’t mean that if you’re first to act and you get an even number that you automatically win. You only win if you gives the opponent an odd number. The exception to this is power of 2 number. With power of 2, all of your divisors are even. You have 2 choices: Choose a random even divisor and subtract it from N. The resulting even N will have an odd divisor, since any even number that’s not a power of 2 has an odd divisor. Then, your opponent will choose that odd divisor, subtracting the odd divisor from the even resulting N, and you’ll get an odd N. You lost. Choose N/2. This is the only way to give your opponent an even N that’s also a power of 2 so that they can’t return you an odd number. Remember, all odd lose. Since both players play optimally, they will choose 2 every time. Therefore, 4 = 2^2, 16 = 2^4, 64 = 2^6 will means the first player win (they will choose n/2 every time, and the second player will encounter 2 first and lose). 8 = 2^3, 32 = 2^5, 128 = 2^7 will means the first player lose, since they will encounter 2 first when both players keep picking N/2. Feel free to play this out with a friend and check the result (assume you have friends). Game theory problems always intrigue me because there are interesting property, and you can actually play this with friends. Admittedly, they will just think you’re a nerd, but some friends might think it’s cool (plus, after all this, you should be able to beat them, since they probably won’t play it optimally). Anyway, about Anime. I jumped around between anime and haven’t finished any yet. Not that I’m quickly bored, just that some animes are too good to finish. When you finished it, you just feel dead inside, and I’d rather not feel that. I think it’s better for my mental health if I kept those good animes around for dark days so t","date":"2021-07-08","objectID":"/posts/cf_2/:0:0","tags":["CF"],"title":"Big brain stuff I found on Codeforces","uri":"/posts/cf_2/"},{"categories":["Programming"],"content":"Besides sleeping and watching anime, I also do some studying too (emphasized on some). Sometimes, I read on topics from Algorithm/Competitive Programming, continuing my Coursera course on ML , or continue to blow shit up in AWS just because. I also forget stuff pretty quickly, so I’ll try to document what I learned today here. Also try to see how deep I really understand what I read because if you can’t understand what I’m talking about here (even if you aren’t a CS major), then there’s a high chance I just don’t know what I’m talking about. Here we go: ","date":"2021-07-08","objectID":"/posts/explanation_1/:0:0","tags":null,"title":"Dumb it down: Edmond-Karps, Max-Flow-Min-Cut, Support Vector Machine, VPC/Networking","uri":"/posts/explanation_1/"},{"categories":["Programming"],"content":"Edmond-Karps Edmond-Karps is a max-flow algorithm. What’s max-flow? Well, imagine you wanna pump water through a bunch of pipes to your neighbor’s house to piss them off, but each pipes can carry a different max amount of water. But you wanna pump as much water as possible! Note that you don’t pay the water bill. How do you do it? (However, you will pay if the pipe bursts). Edmond-Karps say you keep pumping. You find a path where all the pipes on that path can still carry water, and you keep pumping. Note that you can only carry the minimum of what all pipes on that path can carry. Ex: If the pipes on your path can carry 2,3,5,7, then you can only make them all carry 2 (cuz you pay if the 2 pipe burst). So you pump, and you get to this. We’re done!…? What does that picture even mean? It means instead of D pumping 3 to A, D only pumps 2, and s will compensate for that missing 1. Instead, D will use the extra 1 to pump to C. Extra water! How did you even find this? Well, same thing as last time, we will try to find path that we can still pump water through. However, we’ll have a trick up our sleeve. When D pumps 3 to A, we will tell A that it can pumps 3 to D! Wait, what? But we can’t go from A to D… You might say. Not with that attitude! Think about this, and lmk if it makes sense. You have 3 going to D (from somewhere) and you pump that 3 to A. However, let’s say A have too much water and wanna return 2 back to D. Instead of physically pumping from A to D, we’ll just tell D to pump 3-2 = 1 to A instead of 3. It still results in the same situation: Instead of D pumping 3 to A and A pumping 2 back, D only pumps 1 to A. Although we can’t do the former irl, we can cheat use that model to handle tricky situation where we need to return water back to use on another pipe that needs it more. So that’s that. Next time you need to flood your neighbor’s house, remember to use Edmonds-Karp algorithm. ","date":"2021-07-08","objectID":"/posts/explanation_1/:1:0","tags":null,"title":"Dumb it down: Edmond-Karps, Max-Flow-Min-Cut, Support Vector Machine, VPC/Networking","uri":"/posts/explanation_1/"},{"categories":["Programming"],"content":"Max-Flow-Min-Cut Max-Flow-Min-Cut Theorem say that when you’re done flooding your neighbor’s lawn, you can keep the map of all the pipes and how much water they carry. On that piece of paper, you’ll can divide all the nodes (nodes are the circle thingy where your water is stored) into 2 groups: A group with the source node (where you start pumping) and a group with the destination node (your neighbor’s house). Pick randomly. You’ll find that, no matter how much you try, the amount of water that flow from the source group to the destination group won’t be smaller than the max flow (i.e how much water you were able to pump to your neighbor’s house). The reason: All water from your house eventually flow to your neighbor’s house. That’s your max flow. Therefore, water from your source node and any nodes you pick for source group will find its way to the neighbor’s house, or through a node in the destination group before entering your neighbor’s house. That’s where our minimum of 10 come from. And the min-cut-max-flow theorem said that the minimum amount of water from source group to destination group (i.e min-cut) = your max flow. However, some nodes from the destination group (because you pick randomly) might pump water back to your source group temporarily. Because we only count water from source group to destination group, this means the source group get to reuse that water: they pump it to destination, destination return it temporarily, and they pump it back again to destination (remember all water ultimately ends in your neighbor’s lawn). That’s why some source/destination group configuration will have more water flowing from source to destination groups than max flow (btw, dividing all nodes to source/destination is called cut. You basically cut it into 2 groups). I think I explained that like shit, but oh well. Feel free to read more. One last thing: You can find any min-cut by starting from source, go through any pipe that can still carry water and add those nodes to source group (including those opposite pipes we were talking about). Some caveat: _There’s one simplest min-cut. It’s the source node vs everyone else. _There are min-cut that you cannot discover by only going through pipe that can still carry water. Imagine a network where all pipes are maxed out. _The reason why this works (I think, they didn’t clarify this) is that any min-cut cannot have water from destination go back to source (because source can reuse that water, effectively increasing the amnt of water from source to dest). You eliminate this possibility by going through the opposite pipe that we talked about and add that node to your source group. Theoretically, any cut where no destination node pump water to source node would qualify as min-cut. Tired yet? Still have 2 more to go! ","date":"2021-07-08","objectID":"/posts/explanation_1/:2:0","tags":null,"title":"Dumb it down: Edmond-Karps, Max-Flow-Min-Cut, Support Vector Machine, VPC/Networking","uri":"/posts/explanation_1/"},{"categories":["Programming"],"content":"Support Vector Machine This section is only for those who know what I’m talking about. Feel free to skip it. So in Machine Learning, there’s this thing called Support Vector Machine (SVM). I won’t even bother with how it works so feel free to look it up lmao. SVM is also a large margin classifier, which means it will try to draw a decision boundary with large distance between classes. And this only really works when C, the parameter you multiply with the cost parameter, is high. I was initially confused by this, even after looking through the vector stuff. Since C is high, I thought that the SVM can compensate by just making theta obscenely high, since regularization doesn’t matter to it as much as the cost parameter. However, after thinking it over, I realized that it could do that, but it can do better by just picking a large margin instead, since it’s still punished quadratically for making theta high. In fact, large margin is implicitly encouraged by making C high. In contrast, when C is low, it can just underfit and make close decision boundary, since it cares more about making theta low. But yea, the large margin thing was quite interesting. Idk. ","date":"2021-07-08","objectID":"/posts/explanation_1/:3:0","tags":null,"title":"Dumb it down: Edmond-Karps, Max-Flow-Min-Cut, Support Vector Machine, VPC/Networking","uri":"/posts/explanation_1/"},{"categories":["Programming"],"content":"VPC So I’m reading a book about AWS (cuz I’m a nerd) while also blowing shit up in the console. But I’m poor, so I try not to blow too much up. Anyway, I was reading about VPC and networking, and I’m not exactly any good at networking. I thought I’ll just list some term here and try my best to define them. Feel free to check it if you actually know what they are; feel free to lmk if you understand (because if you don’t, then I prob don’t understand it that well): VPC: Virtual Private Cloud. Basically networking stuff so that you manage all the connections and won’t be featured on haveibeenpwned.com. CIDR blocks: A huge continuous block of IP. AWS give your VPC a primary CIDR blocks to mess with. IP(v4): I’m still not sure if I understand it well. Just know that it’s used to connect you with stuff through Internet or your local network, or, in this case, VPC network. IPv4 is usually from 0.0.0.0 to 255.255.255.255. Prefix length: Describes how many bits in the subnet, but more importantly, how many IP you have in the CIDR blocks. /24 means that the mask is xxx.xxx.xxx., therefore you can only go from xxx.xxx.xxx.0 to xxx.xxx.xxx.255. Also, lower is better, since you’ll have less x, more range of IP address =\u003e more IP address. CIDR blocks are described with an IP mask and a prefix length. Ex: 192.168.0.0/16 means that you can go from 192.168.0.0 to 192.168.255.255, while 192.168.0.0/24 means that you can only go from 192.168.0.0 to 192.168.0.255 (since 24 means you can’t move around the first 3 of the 4 parts, kinda). Prefix length can go from 1 to 32 - it just means how many bytes the mask contains. But that will requires more explanation, so just remember it as how many IP the AWS overlord gives you. IP(v6): No lul. It’s still pretty cool and good tho. Subnet: Within your CIDR blocks, you can chop those IP addresses up into subnet to use for different purpose. My book mentions that you can chop some for web server and some for database server, so that’s that. Also, you cannot have subnets with overlapping range, and they must be all within the range of the VPC CIDR block. Also, apparently AWS also took the first 3 IP address and the last one in every subnet for fun. You can’t complain to Jeff Bezos for this one, altho you can complain to the new CEO, since he apparently used to lead AWS. Also, that was wild. The dude who lead AWS is now the CEO of Amazon. I guess even they start to realize that AWS might be the new and better Amazon.com. That’s all for today. Fuck I need to actually sleep. I’ll wake up tomorrow and see if I can actually understand what’s being written here. I bet that 90% of this is incoherent anyway. I’mma go back to shitposting about anime tomorrow (not that this isn’t shitposting, just a bit higher-quality than what I usually put on here). ","date":"2021-07-08","objectID":"/posts/explanation_1/:4:0","tags":null,"title":"Dumb it down: Edmond-Karps, Max-Flow-Min-Cut, Support Vector Machine, VPC/Networking","uri":"/posts/explanation_1/"},{"categories":["Chess","shitpost"],"content":"I played chess. A bit. Since 5th grade or so. I won some tournament back in Vietnam and here in US (not scholastic lmao). Some of my games under USCF are online, however most of the game I played in Vietnam (when I was stupid and sacked all my pieces) are lost. I kept annotation of all games, but I threw away most of it when I went to the US. I wished I haven’t. You see, chess is a funny game and has a funny reputation. It’s considered a game of intellectual, but ever since Deep Blue beat Kasparov, it has become a contest of who remember more Stockfish lines (not to downplay the top chess players' achievement and intelligence; remembering stuff isn’t easy, because if it is, I would have good grade by now). However, I’m not here to reminisce about the day of Paul Morphy or the drunk Alekhine; the chess quality has definitely increased, and the number of draws are mostly due to incredible precision from both sides. Still, for anyone who’s new to chess or just joined chess due to the Twitch boom, enjoy the beginning of your chess career. I assure you, you are having much more fun at chess than me, titled players or top players, even though losing certainly isn’t fun. I enjoyed reading r/anarchychess and their celebration/encouragement of intentional bad chess - Bongcloud, forced en passant (their hate of the London system is justified). I enjoyed watching beginner chess game on Youtube accompanied by the famous and totally unrelated theme of Yakuza 0 (although the sentiment of the song does accurately reflect the quality of the chess played there - sad). I also recently found myself watching U1400, U1200 chess game during tournament instead of Open or U2200. It’s not because I think their mistakes are hilarious; rather, I think their games are much more interesting and worth watching than GM closed-position French defense game. And that they’re having the time of their life exploring all the possibility of chess and having fun doing so, instead of resigning to the fact that if they play out of theory or some strange gambit, their opponent will almost certainly recount their Stockfish prep line and beat them up. GM are afraid to innovate and try things beside what Stockfish told them because they know if they deviate, their games will be criticized by commentators with engine or their opponent’s Stockfish prep will activate and cancel any element of surprise. Average post on r/anarchychess The chess community has been stagnated before the Twitch chess boom. Now, with all the influx of beginners and novices into chess, I think I’m finally able to enjoy chess again. Thanks, noob. PS: All the cool kids do lichess. Before lichess, it was a dark, dark time for chess community, where puzzles, engines and trainings are all behind paywall (some sites even charge you for playing online). Lichess was the light, and you’ll make much more progress doing free puzzles and training on Lichess than watching paid lessons from Chess.com (which is also hella boring). PSS: I really hate to say this, but 1 minute chess is not good for anyone mentally. You might seem cool doing it (I did it in front of my friend; they thought I was some kind of genius - the truth couldn’t be further away), but it’s a very dangerous and addictive format (since 1 minute games are short, you’ll say: “I’ll play one more”, and before you know it, it’s 4 AM). Even if you don’t want to improve at chess, play longer time control - it’s less addictive and you can still have fun blundering all of your pieces. ","date":"2021-07-04","objectID":"/posts/chess_joy/:0:0","tags":null,"title":"Chess going mainstream, and how to have fun playing chess","uri":"/posts/chess_joy/"},{"categories":["Shitpost"],"content":"I just finished tutoring an 11 years old on Algebra I today. The tutoring system is weird, especially for Asian countries/cultures (imo). I attended a public elementary school in Vietnam. The school is pretty good, but the teachers are still underpaid. So my teacher decided to open an after-school class at her house and make all the kids take it as an implicit quid pro quo for better grades in her class. There were around 20 kids in her after-school class on an average day. And she rented an apartment. Vietnam has an entrance-exam system for magnet middle school. Students in the magnet middle school usually end up at the magnet high school and go to colleges abroad or in the US. As such, parents with the means want their kids to be in the magnet school. And because you have to take a test instead of paying to get in, testing prep center props up across the city. I attended one with 12 classes, with 30 students in average for each class. To put it in perspective, that’s more classes and students than my elementary school’s graduating class. I flunked the entrance exam ofc, but that’s for another day. I have friends who go to that magnet middle school. 2 of them are in UMass Amherst. Coincidentally, their parents are also pretty well-off. And they take a lot of prep classes with me until I left Vietnam at 7th grade. Not to downplay their success or achievements, because they’re both really talented, but rather it’s more of an observation how kids who don’t have the mean to take prep class rarely shows up in those magnet middle schools that supposed to represent a meritocratic system. Tutoring used to be for kids who fall behind in curriculum. Increasingly though, it seems like tutoring has become a requirement just to keep up, and even as a mean to get ahead. I previously volunteer to tutor after-school for kids who live in mobile home park. Now, I’m some paid tutor for kids who skip 3,4 math classes because their parents want them to take Calculus BC by 10th grade. I’m a bit conflicted about my role at exacerbating inequality. PS: I also took one SAT prep class that was provided by my school district. The class is actually filled with students who struggle at SAT and need actual help on the subject matter, not just tips and tricks on how to manage time and do reading questions in certain order. For however much Americans complain about inequality (which is still valid), just be glad that at least you don’t live in a system where cram school is a necessity, not a choice. A perfectly meritocratic system is a lot more pretty on paper than it is in reality. PSS: For those who’re interested, the entrance exam for that magnet middle school is online. Here’s the math part and here’s the english part. I have a funny feeling that even high schooler will struggle a bit on the math part. I have no idea how well a native speaker would do on the English part though. Also, the answer key is there too, so check your work. ","date":"2021-07-03","objectID":"/posts/about_tutoring/:0:0","tags":["tutoring"],"title":"About Tutoring","uri":"/posts/about_tutoring/"},{"categories":["Programming","Guitar"],"content":"So I woke up to this today. I highly doubt that it’s actually anyone who read my website or download from the Guitar S3 bucket at all. After all, I’m not that popular. I think it’s Google, Yahoo and their web crawler trying to index that website. With that said, I hate Google, Yahoo and their web crawler. And although the layout looks quite pretty, it’s also a big inconvenience to anyone who want to download in bulk. I’ll reupload everything in Google Drive and redirect the top section Guitar to the Google Drive link. I’ll still leave the index.html in for anyone interested at recreating the site on their localhost. I can probably pay for that cost without any problem, and since it’s probably crawlers, they won’t crawl all the time, so the cost should go down. Still, I realized that Google Drive is probably best for these kind of things. Btw, I still don’t get how the guitar s3 bucket receive more request in one day than my website in 1 month. I’m still confused on how crawler works, but the guitar bucket and my website has roughly the same amount of objects (different size ofc). If anyone know, feel free to lmk. ","date":"2021-07-03","objectID":"/posts/guitar_update/:0:0","tags":["tabs"],"title":"Guitar Update","uri":"/posts/guitar_update/"},{"categories":["Programming","Guitar"],"content":"I uploaded my entire guitar folders up to this point. About ~700 ish tabs, mostly/all fingerstyles (no chords btw). Note that they’re mostly anime (though, imo, all of the songs in there are very good OP/ED. At least the one you can play on guitar anyway). They’re mostly public, although quite hard to find (some sites I used is gametabs.net and online Youtubers). Access it at http://triet-guitar.s3-website-us-east-1.amazonaws.com Please don’t flood it with download request. As in don’t intentionally DDOS it. Your normal download’s gonna be fine. AWS charges me half a cent for 1000 requests. I also have 20k free s3 requests each month, and this site uses around 25% of it. Also, there’s no logging, as in I won’t be tracking your IP. This isn’t a honeypot. Just go around and see which tab you’d like, and download it. If you have additional anime tabs that you would like to contribute, please feel free to send it. I think I’m missing a lot from Bunny Girl Senpai and Sakurasou (especially Prime Numbers - Sakurasou ED 2, I digged the whole Internet and found nothing). I have a couple MIDI and sheet music in there, but I forgot how to read sheet music so… You might have noted that it’s not my website, and you’d be correct. This website fetchs stuff from an S3 bucket through API Gateway, even though I have no intention (or idea) of running any Lambda stuff yet. This isn’t really a static website; I can setup a login mechanism, although I’m probably too dumb, poor and lazy to do that. Also, there’s a whole file directory setup. That’s not your browser; that’s my index.html and some scripts I stole copied off Github. Script at: https://gist.github.com/glowinthedark/625eb4caeca12c5aa52778a3b4b0adb4#file-generate_directory_index_caddystyle-py Also, I learned how painful it is to directorify (or whatever) a folder. Apparently Python doesn’t like Unicode or weird characters, so I have to sanitize all folder’s name before even trying anything. Also for API Gateway’s purpose, all directory needs to be without whitespace or weird character. I wrote a small script to recursively sanitize all directory’s name, if anyone’s interested. It’s in the root directory. Last note: You can actually access the same thing on my website at https://trietmvo.com/guitar. It’s kinda the same thing, but because I cannot set up API Gateway to save my life, everything in there is almost nearly broken and very annoying to use. If you don’t happen to be on the FBI watchlist and need HTTPS, the S3 link should do just fine. No longer relevant. I decided that it’s too much of a pain since deploy took more than 5 seconds (that’s 5 seconds less of my lifespan) so I moved it to another S3 bucket and deleted the /guitar directory from my website. Setting up API Gateway is a pain. If anyone know how to set this stuff up and how to tell API Gateway to just copy whatever S3 bucket endpoint is doing, please teach me. I’m tired, haven’t finished Duolingo (pretty sure that bird knocked last night at 3 AM), and still need to prepare to teach Algebra tomorrow. This is actual pain. ","date":"2021-07-02","objectID":"/posts/guitar/:0:0","tags":["tabs"],"title":"Upload my guitar repo","uri":"/posts/guitar/"},{"categories":["Programming","Guitar","Shitpost"],"content":"CF Announcement","date":"2021-07-02","objectID":"/posts/cf/","tags":["CF"],"title":"CF Announcement","uri":"/posts/cf/"},{"categories":["Programming","Guitar","Shitpost"],"content":"I’m pleased to announce that after long deliberation and hard work, I finally feel comfortable enough to use an anime girl for my Codeforces avatar (handle: NotSponsored) I wanna thanks my ICPC teammate, my ICPC coach, my parents, the pet that I’ll adopt in the future, my country, God and my future employers (assume I’ll have any) for this opportunity. It’s truly a great honor to finally have an anime profile pic for a competitive coding account. I feel that my CF ratings will only rocket upward after this. The photo I picked is Michiru Hyodo from Saenai. I haven’t finished Saenai (on ep 12 on S1) but will probably pick it up again. ","date":"2021-07-02","objectID":"/posts/cf/:0:0","tags":["CF"],"title":"CF Announcement","uri":"/posts/cf/"},{"categories":["Anime","Shitpost"],"content":"As promised, I’ll use this site to shitpost. Some people will say: “Why are you broadcasting your life and your thought to the whole world?” Well, the NSA, Google, Facebook and Amazon already knew every details of my life anyway, so this won’t really make a difference. Plus, I doubt anyone actually go around this corner of the internet anyway. The anime I’m currently watching is Higehiro and Yuru Yuri. I binged one night to episode 5 of Higehiro. I think it’s pretty good. I was actually waiting until it finished airing to watch (cuz I wanna binge). Idk how realistic the anime is, but the MC is a real dude for not taking advantage of the situation. Too bad there are still idiots out there who think accepting offers from lost high school girls isn’t the same thing as taking advantage of them. Hint: it is. I think next on my Spring/Summer 2021 is Nagatoro and Osamake. But besides that, I’ll just binge slice-of-life anime like Yuru Yuri, Hitoribocchi, Kobayashi (heard S2 is airing), 300 years slime, Love Lab, and so on. I found that my performance improves when I binged anime the night before. I once watched anime till 2 AM instead of studying for a programming final exam at 8 am the same day. I get a 5 hours sleep, wake up to the anime’s OP and aced the exam. Coincidence? Also anime helps reduce stress. Kinda. Not exactly scientific, but some animes are pretty light-hearted and really help when I have a particularly bad day. ","date":"2021-07-01","objectID":"/posts/anime_im_watching/:0:0","tags":["Higehiro","Osamake","Yuru Yuri"],"title":"Anime I'm watching","uri":"/posts/anime_im_watching/"},{"categories":null,"content":"Happy Birthday to my dad! Yea, his birthday is right next to Father’s day. Today is his real birthday. On most paperwork, however, he’s listed as born on a different day (because my grandparent was too busy to remember when he was born, so they just wrote some random day down). Happy birthday Dad. I didn’t do much preparation this year; however, I’ll make a real birthday and birthday gift when I get a job and stuff (or any internship that’ll pay me well…) Thanks for working and carrying the family. You were away for a large part of my life because you were working offshore and trying to get us a better life; still, I enjoy doing stuff with you. PS: I got my first taste of living away from my family a.k.a. living in NYU dorm. Now I’m currently living with my family for the summer. I still do the same kind of stuff, still go to sleep and wake up at ungodly hours, still procrastinate all assignments,… Still, it feels different having my family with me. Not that I interacted with them a lot during the day, but their presence is already comforting enough. To borrow a phrase from a language I’m learning: 嬉しいです. ","date":"2021-06-21","objectID":"/posts/happy-birthday-to-my-dad/:0:0","tags":null,"title":"Happy Birthday to my dad","uri":"/posts/happy-birthday-to-my-dad/"},{"categories":null,"content":"Happy Father’s Day! Uyen: I love you so much, You’ve done so many things for me, and I look at you as a great dad and I praise you so much. Triet: Happy Father’s Day! Cảm ơn Ba Dũng đã giúp con trong SQL với C#, với giúp gia đình mình đi Mỹ. Thanks and happy Father’s day! This is the gif that my sister picked out. ","date":"2021-06-20","objectID":"/posts/happy-fathers-day/:0:0","tags":null,"title":"Happy Father's day to my Father (from me and my little sister)","uri":"/posts/happy-fathers-day/"}]